<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - @BL.ApplicationTitle</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link rel="stylesheet" href="~/Scripts/dojoLibrary/dijit/themes/claro/claro.css" media="screen">
    <link rel="stylesheet" href="~/Scripts/dojoLibrary/dijit/themes/claro/claro.css">
    <link rel="stylesheet" href="~/Scripts/dojoLibrary/dojox/grid/resources/claroGrid.css">
    @Styles.Render("~/Content/tiles")
    <script>
        @{
            string dojoBaseDirectory = Url.Content("~/Scripts/dojoLibrary");
        }

        var dojoConfig = {
            async: true,
            parseOnLoad: true,

            packages: [
                { name: "dojo", location: '@Url.Content(dojoBaseDirectory + "/dojo")'},
                { name: "dijit", location: '@Url.Content(dojoBaseDirectory + "/dijit")'},
                { name: "dojox", location: '@Url.Content(dojoBaseDirectory + "/dojox")' },
                { name: 'CustomWidgets', location: '@Url.Content("~/Scripts/CustomWidgets")' },
                { name: 'js', location: '@Url.Content("~/Scripts/CustomWidgets/js")' },
                { name: 'StaticViews', location: '@Url.Content("~/StaticViews")'}
            ]
            ,
            staticHasFeatures: {
                'config-dojo-loader-catches': 0,
                'config-tlmSiblingOfDojo': 0,
                'dojo-log-api': 0,
                'dojo-sync-loader': 0,
                'dojo-timeout-api': 0,
                'dojo-sniff': 0,
                'dojo-cdn': 0,
                'dojo-loader-eval-hint-url': 1,
                'config-stripStrict': 1,
                'ie-event-behavior': 1,
                'dojo-config-api': 1
            }

        }
    </script>
    <script src="~/Scripts/dojoLibrary/dojo/dojo.js" data-dojo-config="async: true, parseOnLoad: true"></script>

    <script>
        require(["dojo/parser", "dojo/domReady!"]);
    </script>
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink(BL.ApplicationTitle, "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("Equipment", "Index", "Equipment")</li>
                    <li>@Html.ActionLink("Employee", "Index", "Employee")</li>
                    <li>@Html.ActionLink("Supplier", "Index", "Supplier")</li>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li><a>@HttpContext.Current.User.Identity.Name</a></li>
                        <li>@Html.ActionLink("Logout", "Logout", "Auth")</li>

                    }
                    else
                    {
                        <li>@Html.ActionLink("Login", "Login", "Auth")</li>

                    }

                </ul>
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - @BL.ApplicationTitle</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>