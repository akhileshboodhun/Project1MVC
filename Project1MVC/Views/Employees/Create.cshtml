@model Project1MVC.Models.Employee

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<script>
    var mylist = [];
    function AddToList() {
        var obj = $('.equipment-form option:selected');
        var id = obj.val();
        var text = obj.text();
        mylist.push({ id: id, text: text });
        populateEquipments();
    }

    function populateEquipments() {
        var html_list = "";
        for (var i = 0; i < mylist.length; i++) {
            html_list += "<tr><td>" + mylist[i].text + "</td><td><input type=\"button\" name=\"delete-button\" class=\"btn btn-danger\" value=\"Delete\" onclick=\"DeleteFromList(this)\"/></td><input type=\"hidden\" name=\"EquipmentID[" + i + "]\" value=\"" + mylist[i].id + "\"></tr>";
        }
        $('#equipments-assigned').html(html_list);
    }

    function DeleteFromList(obj) {
        var parent = $(obj).parent();
        var sibling2 = parent.siblings()[1];
        var equipmentId = $(sibling2).val();
        console.log('EquipmentID:' + equipmentId);
        mylist = mylist.filter(el => el.id != equipmentId);
        populateEquipments();
    }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Equipments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Equipments, new SelectList(ViewBag.SelectListEquipments, "Value", "Text"), "Select Equipment", new { @class = "form-control equipment-form" })
                        @*@Html.ValidationMessageFor(model => model.EmployeeStatus, "", new { @class = "text-danger" })*@
                    </div>
                    <div class="col-md-2">
                        <input type="button" name="add-button" class="btn btn-success" value="Add" onclick="AddToList()"/>
                    </div>
                </div>
            </div>
        </div>
        <table>
            <thead>
                <tr>
                <th>Equipments Assigned</th>
                </tr>
            </thead>
            <tbody id="equipments-assigned">
            </tbody>

        </table>

<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create" class="btn btn-default" />
    </div>
</div>
</div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
