@model Project1MVC.Models.OrderWrapper

@{
    ViewBag.Title = "Edit Order";
}

<h2>Edit Order</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.OrderProp.SupplierId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.OrderProp.SupplierId, new SelectList(ViewBag.SuppliersList, "SupplierId", "Name", Model.OrderProp.SupplierId), new { @class = "form-control", @id = "inputSupplier" })
            @Html.ValidationMessageFor(model => model.OrderProp.SupplierId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OrderProp.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OrderProp.OrderDate, new { htmlAttributes = new { @class = "form-control datepicker", @Value = Model.OrderProp.OrderDate.ToString("yyyy-MM-dd"), , @id = "inputOrderDate" } })
            @Html.ValidationMessageFor(model => model.OrderProp.OrderDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OrderProp.EffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OrderProp.EffectiveDate, new { htmlAttributes = new { @class = "form-control datepicker", @Value = Model.OrderProp.EffectiveDate.ToString("yyyy-MM-dd"), @id = "inputEffectiveDate" } })
            @Html.ValidationMessageFor(model => model.OrderProp.EffectiveDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OrderProp.IsOrderComplete, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.CheckBoxFor(model => model.OrderProp.IsOrderComplete, new { data_toggle = "toggle", data_on = "Yes", data_off = "Not Yet", data_onstyle = "success", data_offstyle = "warning", @id = "inputIsOrderComplete" })
            @Html.ValidationMessageFor(model => model.OrderProp.IsOrderComplete, "", new { @class = "text-danger" })
        </div>
    </div>


    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.EquipmentOrderProp[0].EquipmentBrand)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EquipmentOrderProp[0].EquipmentModel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EquipmentOrderProp[0].Qty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EquipmentOrderProp[0].UnitPrice)
            </th>
            <th></th>
        </tr>

        @for (int i = 0; i < Model.EquipmentOrderProp.Length; i++)
        {
            var item = Model.EquipmentOrderProp[i];
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.EquipmentBrand)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EquipmentModel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Qty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td>
                    @Html.ActionLink("Edit", "EditEquipment", new { id = Model.OrderProp.Id, equipmentIndex = i }) |
                    @Html.ActionLink("Delete", "DeleteEquipment", new { id = Model.OrderProp.Id, equipmentIndex = i })
                </td>
            </tr>
        }

    </table>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" id="orderSubmit" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
